{"version":3,"sources":["webpack:///src/app/retailertab3/retailertab3.page.html","webpack:///src/app/retailertab3/format-file-size.pipe.ts","webpack:///src/app/retailertab3/retailertab3-routing.module.ts","webpack:///src/app/retailertab3/retailertab3.module.ts","webpack:///src/app/retailertab3/retailertab3.page.scss","webpack:///src/app/retailertab3/retailertab3.page.ts"],"names":["FILE_SIZE_UNITS","FILE_SIZE_UNITS_LONG","FormatFileSizePipe","sizeInBytes","longForm","units","power","Math","round","log","min","length","size","pow","formattedSize","unit","name","routes","path","component","Retailertab3PageRoutingModule","imports","forChild","exports","Retailertab3PageModule","declarations","Retailertab3Page","nacCtrl","activatedRoute","firestore","afStorage","afAuth","loadingController","changeDetection","emailComposer","alertController","buttonText","isRead","isReady","isVerified","isFileUploading","isFileUploaded","filesCollection","collection","files","valueChanges","presentLoading","self","onAuthStateChanged","user","userUID","uid","doc","get","toPromise","userRef","data","retailerType","retailerUID","email","storageRef","ref","getDownloadURL","then","url","error","console","message","detectChanges","navigateRoot","Email","send","SecureToken","To","From","Subject","Body","presentConfirmation","presentAlertCheck","emailConfirmation","newEmail","to","subject","body","isHtml","isAvailable","available","open","promise","Promise","resolve","resolveFunction","create","header","buttons","text","handler","alert","present","trim","update","presentAlert","errorMessage","duration","translucent","cssClass","backdropDismiss","loading","onDidDismiss","role","event","file","item","type","split","imgName","fileStoragePath","imageRef","fileUploadTask","upload","percentageVal","percentageChanges","trackSnapshot","snapshotChanges","pipe","UploadedImageURL","subscribe","resp","storeFilesFirebase","filepath","imgSize","snap","totalBytes","image","set","res","err","selector","template"],"mappings":"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","file":"retailertab3-retailertab3-module-es5.js","sourcesContent":["export default \"<ion-header style=\\\"text-align: center\\\">\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"ios\\\">\\n    <ion-title>\\n      Good Food\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"true\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [hidden]=\\\"!isReady\\\" fullscreen>  \\n  <img [src]=\\\"url\\\" style=\\\"width:100%;\\\"> \\n  <h1 style=\\\"text-align: center;\\\"> {{ name }} </h1>\\n\\n  <div id=\\\"container\\\" *ngIf=\\\"!isRead\\\">\\n\\n    <div class=\\\"ion-text-center\\\" *ngIf=\\\"!isUploading && !isUploaded\\\">\\n      \\n        <h2>Image Upload</h2>\\n      \\n        <ion-button class=\\\"ion-text-center\\\" color=\\\"primary\\\" style=\\\"width: 100%\\\">\\n          <input type=\\\"file\\\" (change)=\\\"uploadImage($event.target.files)\\\" />\\n        </ion-button>\\n      </div>\\n     \\n\\n    <!-- File upload progress bar -->\\n    <!-- <div *ngIf=\\\"percentageVal | async as percentage\\\">\\n      Progress: {{ percentage | number }}%\\n      <ion-progress-bar value=\\\"{{ percentage / 100 }}\\\"></ion-progress-bar>\\n    </div>\\n\\n    <div *ngIf=\\\"trackSnapshot | async as snap\\\">\\n      File size: {{ snap.totalBytes | formatFileSize }} \\n      \\n      Data transfered: {{ snap.bytesTransferred | formatFileSize }}\\n    </div>     -->\\n\\n  </div>\\n \\n  <ion-item >    \\n    <ion-label>\\n      Retailer Name:\\n    </ion-label>\\n    <ion-textarea placeholder=\\\"{{ name }}\\\" [readonly]=\\\"isRead\\\" [(ngModel)]=\\\"name\\\" ></ion-textarea>\\n  </ion-item>\\n\\n   <ion-item >    \\n        <ion-label>\\n          Retailer UID:\\n        </ion-label>\\n        <ion-textarea placeholder=\\\"{{ retailerUID }}\\\" [readonly]=true  ></ion-textarea>\\n    </ion-item>\\n\\n     <ion-item >    \\n        <ion-label>\\n          Retailer Email Address:\\n        </ion-label>\\n        <ion-textarea placeholder=\\\"{{ email }}\\\" [readonly]=true  ></ion-textarea>\\n    </ion-item>\\n    \\n    <div style=\\\"text-align: center\\\"> \\n      <section >\\n        <br>\\n        <ion-button expand=\\\"block\\\" (click)=\\\"edit()\\\">{{buttonText}}</ion-button>\\n      </section>\\n      <section>\\n        <ion-button expand=\\\"block\\\" (click)=\\\"updatePassword()\\\">Update Password</ion-button>\\n      </section>\\n      <section *ngIf=\\\"!isVerified\\\">\\n        <ion-button expand=\\\"block\\\" (click)=\\\"sendEmail()\\\">Send Verification Email</ion-button>\\n      </section>\\n    </div>\\n\\n    \\n</ion-content>\";","import {Pipe, PipeTransform} from '@angular/core';\n\nconst FILE_SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst FILE_SIZE_UNITS_LONG = ['Bytes', 'Kilobytes', 'Megabytes', 'Gigabytes', 'Pettabytes', 'Exabytes', 'Zettabytes', 'Yottabytes'];\n\n@Pipe({\n  name: 'formatFileSize'\n})\n\nexport class FormatFileSizePipe implements PipeTransform {\n  transform(sizeInBytes: number, longForm: boolean): string {\n    const units = longForm\n      ? FILE_SIZE_UNITS_LONG\n      : FILE_SIZE_UNITS;\n    let power = Math.round(Math.log(sizeInBytes)/Math.log(1024));\n  \tpower = Math.min(power, units.length - 1);\n  \tconst size = sizeInBytes / Math.pow(1024, power); // size in new units\n  \tconst formattedSize = Math.round(size * 100) / 100; // keep up to 2 decimals\n  \tconst unit = units[power];\n  \treturn `${formattedSize} ${unit}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Retailertab3Page } from './retailertab3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Retailertab3Page\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class Retailertab3PageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Retailertab3PageRoutingModule } from './retailertab3-routing.module';\n\nimport { Retailertab3Page } from './retailertab3.page';\n\nimport { FormatFileSizePipe } from './format-file-size.pipe';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    Retailertab3PageRoutingModule\n  ],\n  declarations: [\n    Retailertab3Page,\n    FormatFileSizePipe\n  ]\n})\nexport class Retailertab3PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JldGFpbGVydGFiMy9yZXRhaWxlcnRhYjMucGFnZS5zY3NzIn0= */\";","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase/app';\nimport { LoadingController, NavController, AlertController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/storage';\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\n\ndeclare var Email: any;\n\nexport interface imgFile {\n  name: string;\n  filepath: string;\n  size: number;\n}\n\n@Component({\n  selector: 'app-retailertab3',\n  templateUrl: './retailertab3.page.html',\n  styleUrls: ['./retailertab3.page.scss'],\n})\nexport class Retailertab3Page implements OnInit {\n  userRef;\n  userUID;\n  retailerType;\n  retailerUID;\n  name;\n  email;\n  url;\n  buttonText: string = \"Edit\";\n  isRead: boolean = true;\n  isReady: boolean = false;\n  isVerified: boolean = false;\n\n  // File upload task \n  fileUploadTask: AngularFireUploadTask;\n\n  // Upload progress\n  percentageVal: Observable<number>;\n\n  // Track file uploading with snapshot\n  trackSnapshot: Observable<any>;\n\n  // Uploaded File URL\n  UploadedImageURL: Observable<string>;\n\n  // Uploaded image collection\n  files: Observable<imgFile[]>;\n\n  // Image specifications\n  imgName: string;\n  imgSize: number;\n\n  // File uploading status\n  isFileUploading: boolean;\n  isFileUploaded: boolean;\n\n  private filesCollection: AngularFirestoreCollection<imgFile>;\n  \n  constructor(public nacCtrl: NavController, private activatedRoute: ActivatedRoute, private firestore: AngularFirestore, private afStorage: AngularFireStorage, public afAuth: AngularFireAuth, public loadingController: LoadingController, private changeDetection: ChangeDetectorRef, public emailComposer: EmailComposer,  public alertController: AlertController) {\n    this.isFileUploading = false;\n    this.isFileUploaded = false;\n    \n    // Define uploaded files collection\n    this.filesCollection = firestore.collection<imgFile>('imagesCollection');\n    this.files = this.filesCollection.valueChanges();\n  \n   }\n  \n  async ngOnInit() {\n   this.presentLoading()\n    try{\n    var self = this;\n    await (firebase.auth().onAuthStateChanged(async function(user) {  \n      \n      if (user) {        \n        self.userUID = user.uid\n\n          self.userRef = (await self.firestore.collection(\"users\").doc(self.userUID).get().toPromise()).data()\n              self.retailerType = self.userRef.retailerType;\n              self.retailerUID = self.userRef.retailerUID;    \n              self.email = self.userRef.email;\n              self.name = self.userRef.name;\n              self.isVerified = self.userRef.isVerified;\n\n          var storageRef =  self.afStorage.ref(`images/${self.userUID}`).getDownloadURL().toPromise().then(function(url) {        \n              self.url = url; \n          }).catch(function(error) {\n            self.url = 'assets/images/default.png';\n          });\n           \n      }\n      else{\n        console.log('no user signed in');\n      }\n    }));    \n      \n  }\n  catch(error){\n    console.log(error.message)\n  }\n}\n\nasync ionViewWillEnter(){\n  if(this.userUID){  \n  const userRef = (await this.firestore.collection(\"users\").doc(this.userUID).get().toPromise()).data();\n    this.isVerified = userRef.isVerified;\n    this.changeDetection.detectChanges(); \n    this.isReady = true; \n  } \n}  \n\n\nupdatePassword(){        \n  this.nacCtrl.navigateRoot(['./retailer-update-password'])\n}\n\nsendEmail(){        \n  Email.send({\n    SecureToken : \"c11c8a65-d4f9-45b7-8c2a-61f9c48e0ea7\",\n    To : 'goodfoodinnova@gmail.com',\n    From : 'goodfoodinnova@gmail.com',\n    Subject : \"New Retailer Verification Reminder\",\n    Body : 'Hello, please verify retailer: ' + this.name + ' with email: ' + this.email + ' and uid: ' + this.retailerUID + '. Thank you!'\n  }).then(\n    async message => { \n      if(message == \"OK\"){\n        console.log(message)\n        this.presentConfirmation(\"A message has been sent to ensure your account is verified!\")\n      }\n      else{\n        console.log(\"SMTP.js Error: \" + message)\n          const emailConfirmation = await this.presentAlertCheck();\n\n          if (emailConfirmation) {\n\n          let newEmail = {\n            to: 'goodfoodinnova@gmail.com',\n            subject: 'New Retailer Verification',\n            body: 'Hello, please verify retailer: ' + this.name + ' with email: ' + this.email + ' and uid: ' + this.retailerUID + '. Thank you!',\n            isHtml: true,\n          }\n\n          this.emailComposer.isAvailable().then((available: boolean) => {\n            if(available) {\n              console.log(\"isAvailable\");\n            }\n          }).catch((error) => { console.log('EmailComposer Error: ' + error.message) });\n          this.emailComposer.open(newEmail);\n        }\n      }         \n    \n  });    \n}\n\npublic async presentAlertCheck() : Promise<boolean> {\n  let resolveFunction: (confirm: boolean) => void;\n  const promise = new Promise<boolean>(resolve => {\n    resolveFunction = resolve;\n  });\n  \n  const alert = await this.alertController.create({\n    header: 'Confirm Navigation',\n    message: 'You are about to be navigated out of this application. Click OK to continue.',\n    buttons: [\n      {\n        text: 'OK',\n          handler: () => resolveFunction(true)\n      }\n    ]\n  });\n\n  await alert.present();\n  return promise;\n}\n\n\nedit() {\n  console.log(\"clicked edit\")\n  console.log(this.buttonText)\n  console.log(this.isRead)\n    if(this.buttonText == \"Edit\"){\n      this.isRead = false;\n      console.log(\"entered if\")\n      this.buttonText = \"Save\";\n      this.changeDetection.detectChanges(); \n      \n     }\n    else{\n     \n\n      let self = this;\n\n    var storageRef =  this.afStorage.ref(`images/${this.userUID}`).getDownloadURL().toPromise().then(function(url) {        \n        self.url = url; \n    }).catch(function(error) {\n      self.url = 'assets/images/default.png';\n    });\n\n      this.changeDetection.detectChanges();       \n      \n      const { name } = this\n      if(name.trim().length != 0){\n        try{\n          this.firestore.doc(`users/${this.userUID}`).update({          \n            name               \n          })\n          this.isRead = true;\n          this.buttonText = \"Edit\";\n        }catch(error){  \n          console.log(error.message)\n        }   \n      }else {\n       this.presentAlert(\"Please enter a value for name\");       \n      }  \n      \n    }   \n  }\n\n  public async presentAlert(errorMessage) : Promise<boolean> {\n    let resolveFunction: (confirm: boolean) => void;\n    const promise = new Promise<boolean>(resolve => {\n      resolveFunction = resolve;\n    });\n    \n    const alert = await this.alertController.create({\n      header: 'Error',\n      message: errorMessage,\n      buttons: [\n        {\n          text: 'OK',\n            handler: () => resolveFunction(true)\n        }\n      ]\n    });\n    \n  await alert.present();\n  return promise;\n}\n\npublic async presentConfirmation(message) : Promise<boolean> {\n  let resolveFunction: (confirm: boolean) => void;\n  const promise = new Promise<boolean>(resolve => {\n    resolveFunction = resolve;\n  });\n  \n  const alert = await this.alertController.create({\n    header: 'Email Confirmation',\n    message: message,\n    buttons: [\n      {\n        text: 'OK',\n          handler: () => resolveFunction(true)\n      }\n    ]\n  });\n  \nawait alert.present();\nreturn promise;\n}\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      duration: 900,\n      translucent: true,\n      cssClass: 'transparent',\n      backdropDismiss: false\n    });\n    await loading.present();\n\n    const { role, data } = await loading.onDidDismiss();\n    this.isReady = true;\n    this.changeDetection.detectChanges(); \n  }\n\n  \n  uploadImage(event: FileList) {\n      \n    const file = event.item(0)\n\n    // Image validation\n    if (file.type.split('/')[0] !== 'image') { \n      this.presentAlert('File type is not supported!')\n      return;\n    }\n\n    this.isFileUploading = true;\n    this.isFileUploaded = false;\n\n    this.imgName = this.retailerUID;\n\n    // Storage path\n    const fileStoragePath = `images/${this.imgName}`;\n\n    // Image reference\n    const imageRef = this.afStorage.ref(fileStoragePath);\n\n    // File upload task\n    this.fileUploadTask = this.afStorage.upload(fileStoragePath, file);\n\n    // Show uploading progress\n    this.percentageVal = this.fileUploadTask.percentageChanges();\n    this.trackSnapshot = this.fileUploadTask.snapshotChanges().pipe(\n      \n      finalize(() => {\n        // Retreive uploaded image storage path\n        this.UploadedImageURL = imageRef.getDownloadURL();\n        \n        this.UploadedImageURL.subscribe(resp=>{\n          this.storeFilesFirebase({\n            name: this.retailerUID,\n            filepath: resp,\n            size: this.imgSize\n          });\n          this.isFileUploading = false;\n          this.isFileUploaded = true;\n        },error=>{\n          console.log(error);\n        })\n      }),\n      tap(snap => {\n          this.imgSize = snap.totalBytes;\n      })\n    )\n}\n\n\nstoreFilesFirebase(image: imgFile) {\n    //const fileId = this.afstore.createId();\n    \n    this.filesCollection.doc(this.retailerUID).set(image).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n}\n\n\n\n\n}"]}