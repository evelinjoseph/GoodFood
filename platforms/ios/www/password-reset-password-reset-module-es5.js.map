{"version":3,"sources":["webpack:///src/app/password-reset/password-reset.page.html","webpack:///src/app/password-reset/password-reset-routing.module.ts","webpack:///src/app/password-reset/password-reset.module.ts","webpack:///src/app/password-reset/password-reset.page.scss","webpack:///src/app/password-reset/password-reset.page.ts"],"names":["routes","path","component","PasswordResetPageRoutingModule","imports","forChild","exports","PasswordResetPageModule","declarations","PasswordResetPage","afAuth","nacCtrl","alertController","emailAddress","self","sendPasswordResetEmail","then","presentAlert","navigateRoot","error","message","promise","Promise","resolve","resolveFunction","create","header","buttons","text","handler","alert","present","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,8BAA8B;AAAA;AAAA,O;;AAA9BA,oCAA8B,6DAJ1C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI0C,GAA9BH,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DATnC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6FAJO,CADD;AAORI,oBAAY,EAAE,CAAC,sEAAD;AAPN,OAAT,CASmC,GAAvBD,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFE,iBAAiB;AAI5B,mCAAmBC,MAAnB,EAAmDC,OAAnD,EAAkFC,eAAlF,EAAoH;AAAA;;AAAjG,eAAAF,MAAA,GAAAA,MAAA;AAAgC,eAAAC,OAAA,GAAAA,OAAA;AAA+B,eAAAC,eAAA,GAAAA,eAAA;AAFpF,eAAAC,YAAA,GAAe,EAAf;AAEyH;;AAJ3F;AAAA;AAAA,qCAMjB,CACV;AAP2B;AAAA;AAAA,0CASf;AACX,gBAAIC,IAAI,GAAG,IAAX;AACA,iBAAKJ,MAAL,CAAYK,sBAAZ,CAAmC,KAAKF,YAAxC,EAAsDG,IAAtD,CAA2D;AACzDF,kBAAI,CAACG,YAAL,CAAkB,mCAAlB;AACAH,kBAAI,CAACH,OAAL,CAAaO,YAAb,CAA0B,CAAC,SAAD,CAA1B,EAFyD,CAGzD;AACD,aAJD,WAIS,UAASC,KAAT,EAAgB;AACvBL,kBAAI,CAACG,YAAL,CAAkBE,KAAlB;AACD,aAND;AAOD;AAlB2B;AAAA;AAAA,uCAoBFC,OApBE,EAoBO;;;;;;;AAE3BC,6B,GAAU,IAAIC,OAAJ,CAAqB,UAAAC,OAAO,EAAI;AAC9CC,uCAAe,GAAGD,OAAlB;AACD,uBAFe,C;;AAIF,6BAAM,KAAKX,eAAL,CAAqBa,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,gBADsC;AAE9CN,+BAAO,EAAEA,OAFqC;AAG9CO,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,IADR;AAEIC,iCAAO,EAAE;AAAA,mCAAML,eAAe,CAAC,IAAD,CAArB;AAAA;AAFb,yBADO;AAHqC,uBAA5B,CAAN;;;AAARM,2B;;AAWN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;uDACOV,O;;;;;;;;;AACR;AAvC2B;;AAAA;AAAA,S;;;;gBARrB;;gBACiB;;gBAAjB;;;;AAOIZ,uBAAiB,6DAL7B,gEAAU;AACTuB,gBAAQ,EAAE,oBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8GAFS;;;;AAAA,OAAV,CAK6B,GAAjBxB,iBAAiB,CAAjB","file":"password-reset-password-reset-module-es5.js","sourcesContent":["export default \"<ion-header style=\\\"text-align: center\\\" >\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [text]=\\\"Back\\\" defaultHref=\\\"/login\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Good Food\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content style=\\\"text-align: center\\\" color = \\\"white\\\">\\n  <img class=\\\"displayed\\\"  height=\\\"250 px\\\" width=\\\"250 px\\\" src=\\\"assets/images/GoodFoodLogo.png\\\" alt=\\\"logo\\\">\\n    <div padding>    \\n      <ion-item>    \\n            <ion-label position = \\\"floating\\\">\\n              Email Address\\n            </ion-label>\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"emailAddress\\\"></ion-input>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"resetPassword()\\\">Reset Password</ion-button>\\n        </ion-col>\\n      </ion-row>\\n\\n    <small>\\n      Please provide the username or email address that you used when you signed\\n      up for your GoodFood account.\\n    </small>\\n    </div>\\n  <form>\\n\\n\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PasswordResetPage } from './password-reset.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PasswordResetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PasswordResetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PasswordResetPageRoutingModule } from './password-reset-routing.module';\n\nimport { PasswordResetPage } from './password-reset.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PasswordResetPageRoutingModule\n  ],\n  declarations: [PasswordResetPage]\n})\nexport class PasswordResetPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bhc3N3b3JkLXJlc2V0L3Bhc3N3b3JkLXJlc2V0LnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AlertController, NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.page.html',\n  styleUrls: ['./password-reset.page.scss'],\n})\nexport class PasswordResetPage implements OnInit {\n\nemailAddress = \"\";\n\n  constructor(public afAuth: AngularFireAuth, public nacCtrl: NavController, public alertController: AlertController) { }\n\n  ngOnInit() {\n  }\n\n  resetPassword(){\n    let self = this;    \n    this.afAuth.sendPasswordResetEmail(this.emailAddress).then(function() {\n      self.presentAlert(\"Password Reset Link Sent to Email\");\n      self.nacCtrl.navigateRoot(['./login'])\n      // Email sent.\n    }).catch(function(error) {\n      self.presentAlert(error);\n    });\n  }\n\n  public async presentAlert(message) : Promise<boolean> {\n    let resolveFunction: (confirm: boolean) => void;\n    const promise = new Promise<boolean>(resolve => {\n      resolveFunction = resolve;\n    });\n    \n    const alert = await this.alertController.create({\n      header: 'Password Reset',\n      message: message,\n      buttons: [\n        {\n          text: 'OK',\n            handler: () => resolveFunction(true)\n        }\n      ]\n    });\n  \n    await alert.present();\n    return promise;\n  }  \n\n}\n"]}