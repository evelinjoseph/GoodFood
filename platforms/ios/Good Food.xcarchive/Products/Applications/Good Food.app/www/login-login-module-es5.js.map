{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","listingService","nacCtrl","afAuth","afstore","alertController","email","password","length","Error","self","setPersistence","Auth","Persistence","LOCAL","then","signInWithEmailAndPassword","error","presentAlert","message","currentUser","initializeItems","collection","doc","uid","get","toPromise","docRef","data","isRetailer","navigateRoot","console","log","errorMessage","promise","Promise","resolve","resolveFunction","create","header","buttons","text","handler","alert","present","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-header style=\\\"text-align: center\\\">\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"ios\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button [text]=\\\"Back\\\" defaultHref=\\\"initial-page\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Good Food\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color = \\\"white\\\">\\n  <img class=\\\"displayed\\\"  height=\\\"250 px\\\" width=\\\"250 px\\\" src=\\\"assets/images/GoodFoodLogo.png\\\" alt=\\\"logo\\\">\\n    <div padding>    \\n      <ion-item>    \\n            <ion-label position = \\\"floating\\\">\\n              Email Address\\n            </ion-label>\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n            <ion-label position = \\\"floating\\\">\\n              Password\\n            </ion-label>\\n            <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n        </ion-item>\\n        </div>\\n     \\n <div style=\\\"text-align: center\\\"> \\n  <section >\\n    <br>\\n    <ion-button size =\\\"large\\\" (click)=\\\"login()\\\">Login</ion-button>\\n  </section>\\n  <br>\\n  <section>\\n    <ion-text [routerDirection] = \\\"'forward'\\\" [routerLink]=\\\"['/password-reset']\\\" color=\\\"primary\\\">\\n      <a><u>Forgot Password?</u></a>\\n    </ion-text>\\n  </section>\\n</div>\\n  \\n</ion-content>\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \".displayed {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksY0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFBSiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kaXNwbGF5ZWR7XG5cbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgXG4gIH0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AlertController, NavController } from '@ionic/angular';\nimport * as firebase from 'firebase/app';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ListingsService} from '../listings.service'; \n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  email: string = \"\"\n  password: string = \"\"\n\n  constructor(public listingService: ListingsService, private nacCtrl: NavController, public afAuth: AngularFireAuth, public afstore: AngularFirestore,public alertController: AlertController) { }\n\n  ngOnInit() {\n  }\n\n  async login() {\n    try{ \n    const { email, password } = this        \n    if(email.length==0){\n      throw new Error('Please Enter Email Address');\n    }  \n    if(password.length==0){\n      throw new Error('Please Enter Password');\n    }\n    var self = this;\n      this.afAuth.setPersistence(firebase.auth.Auth.Persistence.LOCAL).then(function() {\n                // New sign-in will be persisted with local persistence.\n        return self.afAuth.signInWithEmailAndPassword(email, password);\n      })\n      .catch(function(error) {\n        self.presentAlert(error.message)\n      });\n      \n      if(firebase.auth().currentUser){ \n        await this.listingService.initializeItems();      \n       var docRef = (await this.afstore.collection(\"users\").doc(firebase.auth().currentUser.uid).get().toPromise()).data();\n       if(docRef.isRetailer == false){\n          this.nacCtrl.navigateRoot(['./tabs/tabs/tab1'])\n        }\n        else{         \n            this.nacCtrl.navigateRoot(['./retailertabs/retailertabs/retailertab1'])     \n          \n        }\n      }      \n    }\n    catch(err){\n      console.log(err.message);\n      this.presentAlert(err.message);\n    }    \n  }\n\n  public async presentAlert(errorMessage) : Promise<boolean> {\n    let resolveFunction: (confirm: boolean) => void;\n    const promise = new Promise<boolean>(resolve => {\n      resolveFunction = resolve;\n    });\n    \n    const alert = await this.alertController.create({\n      header: 'Login Error',\n      message: errorMessage,\n      buttons: [\n        {\n          text: 'OK',\n            handler: () => resolveFunction(true)\n        }\n      ]\n    });\n  \n    await alert.present();\n    return promise;\n  }  \n}\n"]}