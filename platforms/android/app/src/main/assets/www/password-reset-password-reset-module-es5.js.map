{"version":3,"sources":["webpack:///src/app/password-reset/password-reset.page.html","webpack:///src/app/password-reset/password-reset-routing.module.ts","webpack:///src/app/password-reset/password-reset.module.ts","webpack:///src/app/password-reset/password-reset.page.scss","webpack:///src/app/password-reset/password-reset.page.ts"],"names":["routes","path","component","PasswordResetPageRoutingModule","imports","forChild","exports","PasswordResetPageModule","declarations","PasswordResetPage","afAuth","nacCtrl","alertController","emailAddress","self","sendPasswordResetEmail","then","presentAlert","navigateRoot","error","message","promise","Promise","resolve","resolveFunction","create","header","buttons","text","handler","alert","present","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,8BAA8B;AAAA;AAAA,O;;AAA9BA,oCAA8B,6DAJ1C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI0C,GAA9BH,8BAA8B,CAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,uBAAuB;AAAA;AAAA,O;;AAAvBA,6BAAuB,6DATnC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,6FAJO,CADD;AAORI,oBAAY,EAAE,CAAC,sEAAD;AAPN,OAAT,CASmC,GAAvBD,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSFE,iBAAiB;AAI5B,mCAAmBC,MAAnB,EAAmDC,OAAnD,EAAkFC,eAAlF,EAAoH;AAAA;;AAAjG,eAAAF,MAAA,GAAAA,MAAA;AAAgC,eAAAC,OAAA,GAAAA,OAAA;AAA+B,eAAAC,eAAA,GAAAA,eAAA;AAFpF,eAAAC,YAAA,GAAe,EAAf;AAEyH;;AAJ3F;AAAA;AAAA,qCAMjB,CACV;AAP2B;AAAA;AAAA,0CASf;AACX,gBAAIC,IAAI,GAAG,IAAX;AACA,iBAAKJ,MAAL,CAAYK,sBAAZ,CAAmC,KAAKF,YAAxC,EAAsDG,IAAtD,CAA2D;AACzDF,kBAAI,CAACG,YAAL,CAAkB,mCAAlB;AACAH,kBAAI,CAACH,OAAL,CAAaO,YAAb,CAA0B,CAAC,SAAD,CAA1B,EAFyD,CAGzD;AACD,aAJD,WAIS,UAASC,KAAT,EAAgB;AACvBL,kBAAI,CAACG,YAAL,CAAkBE,KAAlB;AACD,aAND;AAOD;AAlB2B;AAAA;AAAA,uCAoBFC,OApBE,EAoBO;;;;;;;AAE3BC,6B,GAAU,IAAIC,OAAJ,CAAqB,UAAAC,OAAO,EAAI;AAC9CC,uCAAe,GAAGD,OAAlB;AACD,uBAFe,C;;AAIF,6BAAM,KAAKX,eAAL,CAAqBa,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,gBADsC;AAE9CN,+BAAO,EAAEA,OAFqC;AAG9CO,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,IADR;AAEIC,iCAAO,EAAE;AAAA,mCAAML,eAAe,CAAC,IAAD,CAArB;AAAA;AAFb,yBADO;AAHqC,uBAA5B,CAAN;;;AAARM,2B;;AAWN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;uDACOV,O;;;;;;;;;AACR;AAvC2B;;AAAA;AAAA,S;;;;gBARrB;;gBACiB;;gBAAjB;;;;AAOIZ,uBAAiB,6DAL7B,gEAAU;AACTuB,gBAAQ,EAAE,oBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,8GAFS;;;;AAAA,OAAV,CAK6B,GAAjBxB,iBAAiB,CAAjB","file":"password-reset-password-reset-module-es5.js","sourcesContent":["export default \"<ion-header style=\\\"text-align: center\\\" >\\r\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"ios\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [text]=\\\"Back\\\" defaultHref=\\\"/login\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Good Food\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content style=\\\"text-align: center\\\" color = \\\"white\\\">\\r\\n  <img class=\\\"displayed\\\"  height=\\\"250 px\\\" width=\\\"250 px\\\" src=\\\"assets/images/GoodFoodLogo.png\\\" alt=\\\"logo\\\">\\r\\n    <div padding>    \\r\\n      <ion-item>    \\r\\n            <ion-label position = \\\"floating\\\">\\r\\n              Email Address\\r\\n            </ion-label>\\r\\n            <ion-input type = \\\"text\\\" [(ngModel)]=\\\"emailAddress\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"resetPassword()\\\">Reset Password</ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n    <small>\\r\\n      Please provide the username or email address that you used when you signed\\r\\n      up for your GoodFood account.\\r\\n    </small>\\r\\n    </div>\\r\\n  <form>\\r\\n\\r\\n\\r\\n  </form>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PasswordResetPage } from './password-reset.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PasswordResetPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PasswordResetPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PasswordResetPageRoutingModule } from './password-reset-routing.module';\r\n\r\nimport { PasswordResetPage } from './password-reset.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PasswordResetPageRoutingModule\r\n  ],\r\n  declarations: [PasswordResetPage]\r\n})\r\nexport class PasswordResetPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bhc3N3b3JkLXJlc2V0L3Bhc3N3b3JkLXJlc2V0LnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-password-reset',\r\n  templateUrl: './password-reset.page.html',\r\n  styleUrls: ['./password-reset.page.scss'],\r\n})\r\nexport class PasswordResetPage implements OnInit {\r\n\r\nemailAddress = \"\";\r\n\r\n  constructor(public afAuth: AngularFireAuth, public nacCtrl: NavController, public alertController: AlertController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  resetPassword(){\r\n    let self = this;    \r\n    this.afAuth.sendPasswordResetEmail(this.emailAddress).then(function() {\r\n      self.presentAlert(\"Password Reset Link Sent to Email\");\r\n      self.nacCtrl.navigateRoot(['./login'])\r\n      // Email sent.\r\n    }).catch(function(error) {\r\n      self.presentAlert(error);\r\n    });\r\n  }\r\n\r\n  public async presentAlert(message) : Promise<boolean> {\r\n    let resolveFunction: (confirm: boolean) => void;\r\n    const promise = new Promise<boolean>(resolve => {\r\n      resolveFunction = resolve;\r\n    });\r\n    \r\n    const alert = await this.alertController.create({\r\n      header: 'Password Reset',\r\n      message: message,\r\n      buttons: [\r\n        {\r\n          text: 'OK',\r\n            handler: () => resolveFunction(true)\r\n        }\r\n      ]\r\n    });\r\n  \r\n    await alert.present();\r\n    return promise;\r\n  }  \r\n\r\n}\r\n"]}