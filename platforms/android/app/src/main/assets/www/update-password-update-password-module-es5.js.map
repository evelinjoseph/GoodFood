{"version":3,"sources":["webpack:///src/app/update-password/update-password.page.html","webpack:///src/app/update-password/update-password-routing.module.ts","webpack:///src/app/update-password/update-password.module.ts","webpack:///src/app/update-password/update-password.page.scss","webpack:///src/app/update-password/update-password.page.ts"],"names":["routes","path","component","UpdatePasswordPageRoutingModule","imports","forChild","exports","UpdatePasswordPageModule","declarations","UpdatePasswordPage","alertController","afAuth","nacCtrl","password","newpassword","cpassword","self","trim","length","Error","signInWithEmailAndPassword","currentUser","email","then","updatePassword","presentConfirmation","navigateRoot","error","presentAlert","message","errorMessage","promise","Promise","resolve","resolveFunction","create","header","buttons","text","handler","alert","present","console","log","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,+BAA+B;AAAA;AAAA,O;;AAA/BA,qCAA+B,6DAJ3C,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAI2C,GAA/BH,+BAA+B,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DATpC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,+FAJO,CADD;AAORI,oBAAY,EAAE,CAAC,wEAAD;AAPN,OAAT,CASoC,GAAxBD,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFE,kBAAkB;AAK7B,oCAAmBC,eAAnB,EAA4DC,MAA5D,EAA6FC,OAA7F,EAAqH;AAAA;;AAAlG,eAAAF,eAAA,GAAAA,eAAA;AAAyC,eAAAC,MAAA,GAAAA,MAAA;AAAiC,eAAAC,OAAA,GAAAA,OAAA;AAJ7F,eAAAC,QAAA,GAAmB,EAAnB;AACA,eAAAC,WAAA,GAAsB,EAAtB;AACA,eAAAC,SAAA,GAAoB,EAApB;AAEwH;;AAL3F;AAAA;AAAA,qCAOlB,CACV;AAR4B;AAAA;AAAA,2CAUf;AAEZ,gBAAG;AACD,kBAAIC,IAAI,GAAG,IAAX;AADC,kBAEMH,QAFN,GAE0C,IAF1C,CAEMA,QAFN;AAAA,kBAEgBC,WAFhB,GAE0C,IAF1C,CAEgBA,WAFhB;AAAA,kBAE6BC,SAF7B,GAE0C,IAF1C,CAE6BA,SAF7B;;AAGD,kBAAGF,QAAQ,CAACI,IAAT,GAAgBC,MAAhB,IAAwB,CAA3B,EAA6B;AAC3B,sBAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AACD,kBAAGL,WAAW,CAACG,IAAZ,GAAmBC,MAAnB,IAA2B,CAA9B,EAAgC;AAC9B,sBAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,kBAAGJ,SAAS,CAACE,IAAV,GAAiBC,MAAjB,IAAyB,CAA5B,EAA8B;AAC5B,sBAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,kBAAGL,WAAW,KAAKC,SAAnB,EAA6B;AAC3B,sBAAM,IAAII,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACDH,kBAAI,CAACL,MAAL,CAAYS,0BAAZ,CAAuC,gDAAgBC,WAAhB,CAA4BC,KAAnE,EAA0ET,QAA1E,EAAoFU,IAApF,CAAyF;AACvF,gEAAgBF,WAAhB,CAA4BG,cAA5B,CAA2CV,WAA3C,EAAwDS,IAAxD,CAA6D;AACvDP,sBAAI,CAACS,mBAAL,CAAyB,kBAAzB;AACAT,sBAAI,CAACH,QAAL,GAAgB,EAAhB;AACAG,sBAAI,CAACF,WAAL,GAAmB,EAAnB;AACAE,sBAAI,CAACD,SAAL,GAAiB,EAAjB;AACAC,sBAAI,CAACJ,OAAL,CAAac,YAAb,CAA0B,CAAC,UAAD,CAA1B;AAED,iBAPL,WAOa,UAASC,KAAT,EAAgB;AACtBX,sBAAI,CAACY,YAAL,CAAkBD,KAAlB;AACF,iBATL;AAUG,eAXL,WAWa,UAASA,KAAT,EAAgB;AACvBX,oBAAI,CAACY,YAAL,CAAkBD,KAAlB;AACF,eAbJ;AAcD,aA7BD,CA8BA,OAAMA,KAAN,EAAY;AACV,mBAAKC,YAAL,CAAkBD,KAAK,CAACE,OAAxB;AACD;AACF;AA7C4B;AAAA;AAAA,uCA+CHC,YA/CG,EA+CW;;;;;;;AAEhCC,6B,GAAU,IAAIC,OAAJ,CAAqB,UAAAC,OAAO,EAAI;AAC9CC,uCAAe,GAAGD,OAAlB;AACD,uBAFe,C;;AAIF,6BAAM,KAAKvB,eAAL,CAAqByB,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,oBADsC;AAE9CP,+BAAO,EAAEC,YAFqC;AAG9CO,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,IADR;AAEIC,iCAAO,EAAE;AAAA,mCAAML,eAAe,CAAC,IAAD,CAArB;AAAA;AAFb,yBADO;AAHqC,uBAA5B,CAAN;;;AAARM,2B;;AAWN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;uDACOV,O;;;;;;;;;AACR;AAlE4B;AAAA;AAAA,8CAoEIF,OApEJ,EAoEa;;;;;;;AAElCE,6B,GAAU,IAAIC,OAAJ,CAAqB,UAAAC,OAAO,EAAI;AAC9CC,uCAAe,GAAGD,OAAlB;AACD,uBAFe,C;;AAIF,6BAAM,KAAKvB,eAAL,CAAqByB,MAArB,CAA4B;AAC9CC,8BAAM,EAAE,8BADsC;AAE9CP,+BAAO,EAAEA,OAFqC;AAG9CQ,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,IADR;AAEIC,iCAAO,EAAE;AAAA,mCAAML,eAAe,CAAC,IAAD,CAArB;AAAA;AAFb,yBADO;AAHqC,uBAA5B,CAAN;;;AAARM,2B;;AAWR,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;wDACOV,O;;;;;;;;;AACN;AAvF4B;AAAA;AAAA,wCAyFf;AACZ,iBAAKlB,QAAL,GAAgB,EAAhB;AACA,iBAAKC,WAAL,GAAmB,EAAnB;AACA,iBAAKC,SAAL,GAAiB,EAAjB;AACA2B,mBAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AA9F4B;;AAAA;AAAA,S;;;;gBARtB;;gBADA;;gBACiB;;;;AAQblC,wBAAkB,6DAL9B,gEAAU;AACTmC,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,gHAFS;;;;AAAA,OAAV,CAK8B,GAAlBpC,kBAAkB,CAAlB","file":"update-password-update-password-module-es5.js","sourcesContent":["export default \"<ion-header style=\\\"text-align: center\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"ios\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [text]=\\\"Back\\\" defaultHref=\\\"/account\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Good Food\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content style=\\\"text-align: center\\\">\\r\\n  <img class=\\\"displayed\\\" height=\\\"250 px\\\" width=\\\"250 px\\\" src=\\\"assets/images/GoodFoodLogo.png\\\" alt=\\\"logo\\\">\\r\\n    <div padding>\\r\\n      <small>\\r\\n        Please enter the current password and new password for your Good Food account.\\r\\n      </small>\\r\\n      <br>\\r\\n      <ion-item>\\r\\n        <ion-label position = \\\"floating\\\">\\r\\n            Current Password\\r\\n          </ion-label>\\r\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <br>\\r\\n      <ion-item>\\r\\n        <ion-label position = \\\"floating\\\">\\r\\n            New Password\\r\\n          </ion-label>\\r\\n          <ion-input type=\\\"password\\\" [(ngModel)]=\\\"newpassword\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <br>\\r\\n      <ion-item>\\r\\n        <ion-label position = \\\"floating\\\">\\r\\n          Confirm Password\\r\\n        </ion-label>\\r\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"cpassword\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <br>\\r\\n    <ion-button type=\\\"submit\\\" color=\\\"primary\\\" expand=\\\"block\\\" (click)=\\\"updatePassword()\\\">Update Password</ion-button>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UpdatePasswordPage } from './update-password.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UpdatePasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UpdatePasswordPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UpdatePasswordPageRoutingModule } from './update-password-routing.module';\r\n\r\nimport { UpdatePasswordPage } from './update-password.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    UpdatePasswordPageRoutingModule\r\n  ],\r\n  declarations: [UpdatePasswordPage]\r\n})\r\nexport class UpdatePasswordPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS1wYXNzd29yZC91cGRhdGUtcGFzc3dvcmQucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, Query } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\nimport * as firebase from 'firebase';\r\n\r\n@Component({\r\n  selector: 'app-update-password',\r\n  templateUrl: './update-password.page.html',\r\n  styleUrls: ['./update-password.page.scss'],\r\n})\r\nexport class UpdatePasswordPage implements OnInit {\r\n  password: string = \"\";\r\n  newpassword: string = \"\";\r\n  cpassword: string = \"\";\r\n\r\n  constructor(public alertController: AlertController, public afAuth: AngularFireAuth, private nacCtrl: NavController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updatePassword(){\r\n    \r\n    try{\r\n      let self = this;\r\n      const {password, newpassword, cpassword} = this\r\n      if(password.trim().length==0){\r\n        throw new Error('Please Enter Current Password');\r\n      } \r\n      if(newpassword.trim().length==0){\r\n        throw new Error('Please Enter New Password');\r\n      } \r\n      if(cpassword.trim().length==0){\r\n        throw new Error('Please Confirm Password');\r\n      } \r\n      if(newpassword !== cpassword){      \r\n        throw new Error('Passwords Do Not Match');\r\n      }\r\n      self.afAuth.signInWithEmailAndPassword(firebase.auth().currentUser.email, password).then(function() {\r\n        firebase.auth().currentUser.updatePassword(newpassword).then(function() {\r\n              self.presentConfirmation(\"Password Updated\");\r\n              self.password = \"\";\r\n              self.newpassword = \"\";\r\n              self.cpassword = \"\";\r\n              self.nacCtrl.navigateRoot(['/account'])\r\n\r\n            }).catch(function(error) {\r\n               self.presentAlert(error)\r\n            });\r\n          }).catch(function(error) {\r\n            self.presentAlert(error)\r\n         });\r\n    }\r\n    catch(error){\r\n      this.presentAlert(error.message);\r\n    }\r\n  }\r\n\r\n  public async presentAlert(errorMessage) : Promise<boolean> {\r\n    let resolveFunction: (confirm: boolean) => void;\r\n    const promise = new Promise<boolean>(resolve => {\r\n      resolveFunction = resolve;\r\n    });\r\n    \r\n    const alert = await this.alertController.create({\r\n      header: 'Registration Error',\r\n      message: errorMessage,\r\n      buttons: [\r\n        {\r\n          text: 'OK',\r\n            handler: () => resolveFunction(true)\r\n        }\r\n      ]\r\n    });\r\n  \r\n    await alert.present();\r\n    return promise;\r\n  }\r\n\r\n  public async presentConfirmation(message) : Promise<boolean> {\r\n    let resolveFunction: (confirm: boolean) => void;\r\n    const promise = new Promise<boolean>(resolve => {\r\n      resolveFunction = resolve;\r\n    });\r\n    \r\n    const alert = await this.alertController.create({\r\n      header: 'Password Update Confirmation',\r\n      message: message,\r\n      buttons: [\r\n        {\r\n          text: 'OK',\r\n            handler: () => resolveFunction(true)\r\n        }\r\n      ]\r\n    });\r\n    \r\n  await alert.present();\r\n  return promise;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.password = \"\";\r\n    this.newpassword = \"\";\r\n    this.cpassword = \"\";\r\n    console.log(\"Left update password\")\r\n  }\r\n\r\n}\r\n"]}