{"version":3,"sources":["./src/app/retailer-register/retailer-register.page.html","./src/app/retailer-register/retailer-register-routing.module.ts","./src/app/retailer-register/retailer-register.module.ts","./src/app/retailer-register/retailer-register.page.scss","./src/app/retailer-register/retailer-register.page.ts"],"names":[],"mappings":"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","file":"retailer-register-retailer-register-module-es2015.js","sourcesContent":["export default \"<ion-header style=\\\"text-align: center\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"ios\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [text]=\\\"Back\\\" defaultHref=\\\"initial-page\\\"></ion-back-button>\\r\\n    </ion-buttons> \\r\\n    <ion-title>\\r\\n      Registration\\r\\n    </ion-title>     \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content fullscreen>\\r\\n  <br>\\r\\n  <ion-list>\\r\\n    <ion-item>\\r\\n      <ion-label>Pick Up Time</ion-label>\\r\\n      <ion-datetime display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" [(ngModel)]=\\\"pickupTime\\\" (ionChange)=\\\"setPickupTime(this.pickupTime)\\\"></ion-datetime>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <ion-label position = \\\"floating\\\">\\r\\n          Name\\r\\n        </ion-label>\\r\\n        <ion-input autocapitalize='sentences' type = \\\"text\\\" [(ngModel)]=\\\"name\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n        Email Address\\r\\n      </ion-label>\\r\\n      <ion-input type = \\\"text\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n        Address Line 1\\r\\n      </ion-label>\\r\\n      <ion-input autocapitalize='sentences' type = \\\"text\\\" [(ngModel)]=\\\"location\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n        City\\r\\n      </ion-label>\\r\\n      <ion-input autocapitalize='sentences' type = \\\"text\\\" [(ngModel)]=\\\"city\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n        State\\r\\n      </ion-label>\\r\\n      <ion-input autocapitalize='sentences' type = \\\"text\\\" [(ngModel)]=\\\"state\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n        Zipcode\\r\\n      </ion-label>\\r\\n      <ion-input type = \\\"text\\\" [(ngModel)]=\\\"zipcode\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n        Retailer Type\\r\\n      </ion-label>\\r\\n      <ion-input autocapitalize='sentences' type = \\\"text\\\" [(ngModel)]=\\\"retailerType\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  \\r\\n  <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n        Password\\r\\n      </ion-label>\\r\\n      <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n  </ion-item>\\r\\n  <ion-item>\\r\\n    <ion-label position = \\\"floating\\\">\\r\\n      Confirm Password\\r\\n    </ion-label>\\r\\n    <ion-input type=\\\"password\\\" [(ngModel)]=\\\"cpassword\\\"></ion-input>\\r\\n</ion-item>\\r\\n</ion-list>\\r\\n  \\r\\n<div style=\\\"text-align: center\\\">\\r\\n  <br>\\r\\n<ion-button fill=\\\"solid\\\" Size = \\\"large\\\" color=\\\"primary\\\" (click)=\\\"register()\\\">Sign Up</ion-button>\\r\\n</div>\\r\\n</ion-content>\\r\\n\\r\\n<!-- TODO: make sign up button inside footer -->\\r\\n\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RetailerRegisterPage } from './retailer-register.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RetailerRegisterPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RetailerRegisterPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RetailerRegisterPageRoutingModule } from './retailer-register-routing.module';\r\n\r\nimport { RetailerRegisterPage } from './retailer-register.page';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RetailerRegisterPageRoutingModule\r\n  ],\r\n  declarations: [\r\n    RetailerRegisterPage\r\n  ]\r\n})\r\nexport class RetailerRegisterPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JldGFpbGVyLXJlZ2lzdGVyL3JldGFpbGVyLXJlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\nimport { EmailComposer } from '@ionic-native/email-composer/ngx';\r\n\r\ndeclare var Email: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-retailer-register',\r\n  templateUrl: './retailer-register.page.html',\r\n  styleUrls: ['./retailer-register.page.scss'],\r\n})\r\nexport class RetailerRegisterPage implements OnInit {\r\n  name: string = \"\";\r\n  email: string = \"\";\r\n  password: string = \"\";\r\n  cpassword: string = \"\";\r\n  location: string = \"\";\r\n  city: string = \"\";\r\n  state: string = \"\";\r\n  zipcode: string = \"\";\r\n  retailerType: string = \"\";\r\n  pickupTime; \r\n\r\n  constructor(private nacCtrl: NavController, public afAuth: AngularFireAuth, public afstore: AngularFirestore, public alertController: AlertController, public emailComposer: EmailComposer) { }\r\n\r\n  ngOnInit() { \r\n  \r\n  }\r\n\r\n  async register() {\r\n    \r\n    try{\r\n      const { name, email, password, cpassword, location, retailerType} = this\r\n      if(password !== cpassword){      \r\n        throw new Error('Passwords Do Not Match');\r\n      } \r\n      if(name.length==0){\r\n        throw new Error('Please Enter a Name');\r\n      }  \r\n      if(location.length==0){\r\n        throw new Error('Please Enter an Address');\r\n      } \r\n      if(retailerType.length==0){\r\n        throw new Error('Please Enter Retailer Type (Restaurant, Food Truck, Cafe)');\r\n      } \r\n      if(this.pickupTime == undefined){\r\n        throw new Error('Please Enter Pickup Time');\r\n      } \r\n      \r\n        const res = await this.afAuth.createUserWithEmailAndPassword(email, password)\r\n        this.afstore.doc(`users/${res.user.uid}`).set({\r\n          email,\r\n          name,\r\n          password,\r\n          isVerified: false,\r\n          isRetailer: true,\r\n          retailerUID: res.user.uid,\r\n          location: this.location + \", \" + this.city + \", \" + this.state + \" \" + this.zipcode,\r\n          retailerType,\r\n          listings: [],\r\n          orders: [],\r\n          pickupTime: new Date(this.pickupTime)\r\n        })\r\n      \r\n      //https://accounts.google.com/b/0/DisplayUnlockCaptcha\r\n\r\n      Email.send({\r\n        SecureToken : \"c11c8a65-d4f9-45b7-8c2a-61f9c48e0ea7\",\r\n        To : 'goodfoodinnova@gmail.com',\r\n        From : 'goodfoodinnova@gmail.com',\r\n        Subject : \"New Retailer Verification\",\r\n        Body : 'Hello, please verify retailer: ' + name + ' with email: ' + email + ' and uid: ' + res.user.uid + '. Thank you!'\r\n      }).then(\r\n        async message => { \r\n          if(message == \"OK\"){\r\n            console.log(message)\r\n            alert(\"A message has been sent to ensure your account is verified!\")\r\n          }\r\n          else{\r\n            console.log(\"SMTP.js Error: \" + message)\r\n              const emailConfirmation = await this.presentAlertCheck();\r\n\r\n              if (emailConfirmation) {\r\n\r\n              let newEmail = {\r\n                to: 'goodfoodinnova@gmail.com',\r\n                subject: 'New Retailer Verification',\r\n                body: 'Hello, please verify retailer: ' + name + ' with email: ' + email + ' and uid: ' + res.user.uid + '. Thank you!',\r\n                isHtml: true,\r\n              }\r\n\r\n              this.emailComposer.isAvailable().then((available: boolean) => {\r\n                if(available) {\r\n                  console.log(\"isAvailable\");\r\n                }\r\n              }).catch((error) => { console.log('EmailComposer Error: ' + error.message) });\r\n              this.emailComposer.open(newEmail);\r\n            }\r\n          }         \r\n        \r\n      });    \r\n      this.nacCtrl.navigateRoot([\"./retailertabs/retailertabs/retailertab1\"])   \r\n  }catch(error){\r\n    this.presentAlert(error.message);\r\n  }\r\n}\r\n\r\npublic async presentAlert(errorMessage) : Promise<boolean> {\r\n  let resolveFunction: (confirm: boolean) => void;\r\n  const promise = new Promise<boolean>(resolve => {\r\n    resolveFunction = resolve;\r\n  });\r\n  \r\n  const alert = await this.alertController.create({\r\n    header: 'Registration Error',\r\n    message: errorMessage,\r\n    buttons: [\r\n      {\r\n        text: 'OK',\r\n          handler: () => resolveFunction(true)\r\n      }\r\n    ]\r\n  });\r\n\r\n  await alert.present();\r\n  return promise;\r\n}\r\n\r\npublic async presentAlertCheck() : Promise<boolean> {\r\n  let resolveFunction: (confirm: boolean) => void;\r\n  const promise = new Promise<boolean>(resolve => {\r\n    resolveFunction = resolve;\r\n  });\r\n  \r\n  const alert = await this.alertController.create({\r\n    header: 'Confirm Navigation',\r\n    message: 'You are about to be navigated out of this application. Click OK to continue.',\r\n    buttons: [\r\n      {\r\n        text: 'OK',\r\n          handler: () => resolveFunction(true)\r\n      }\r\n    ]\r\n  });\r\n\r\n  await alert.present();\r\n  return promise;\r\n}\r\n\r\n  setPickupTime(pickupTime){\r\n    let date = new Date(pickupTime);  \r\n    this.pickupTime =  date.toString();\r\n  }\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}