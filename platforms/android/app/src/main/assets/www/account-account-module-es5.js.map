{"version":3,"sources":["webpack:///src/app/account/account.page.html","webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account.page.scss","webpack:///src/app/account/account.page.ts"],"names":["routes","path","component","AccountPageRoutingModule","imports","forChild","exports","AccountPageModule","declarations","AccountPage","nacCtrl","activatedRoute","firestore","changeDetection","afAuth","alertController","buttonText","isRead","self","onAuthStateChanged","user","userUID","uid","collection","doc","get","toPromise","userRef","data","firstName","firstname","lastName","lastname","email","detectChanges","console","log","message","trim","length","update","error","presentAlert","errorMessage","promise","Promise","resolve","resolveFunction","create","header","buttons","text","handler","alert","present","navigateRoot","presentAlertDelete","confirm","currentUser","set","deleteTime","Date","isRetailer","orders","type","inputs","name","placeholder","signInWithEmailAndPassword","password","then","selector","template"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["export default \"<ion-header style=\\\"text-align: center\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\" mode=\\\"ios\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button [text]=\\\"Back\\\" defaultHref=\\\"/tabs/tabs/tab1\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>\\r\\n      Good Food\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <h1 style=\\\"text-align: center;\\\"> {{firstName}} {{lastName}} </h1>\\r\\n \\r\\n  <ion-item >    \\r\\n    <ion-label>\\r\\n      First Name:\\r\\n    </ion-label>\\r\\n    <ion-textarea placeholder=\\\"{{ firstName }}\\\" [readonly]=\\\"isRead\\\" [(ngModel)]=\\\"firstName\\\" ></ion-textarea>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item >    \\r\\n    <ion-label>\\r\\n      Last Name:\\r\\n    </ion-label>\\r\\n    <ion-textarea placeholder=\\\"{{ lastName }}\\\" [readonly]=\\\"isRead\\\" [(ngModel)]=\\\"lastName\\\" ></ion-textarea>\\r\\n  </ion-item>\\r\\n\\r\\n   <ion-item >    \\r\\n        <ion-label>\\r\\n          User UID:\\r\\n        </ion-label>\\r\\n        <ion-textarea placeholder=\\\"{{ userUID }}\\\" [readonly]=true  ></ion-textarea>\\r\\n    </ion-item>\\r\\n\\r\\n     <ion-item >    \\r\\n        <ion-label>\\r\\n          Email Address:\\r\\n        </ion-label>\\r\\n        <ion-textarea placeholder=\\\"{{ email }}\\\" [readonly]=true  ></ion-textarea>\\r\\n    </ion-item>\\r\\n \\r\\n    \\r\\n    <div style=\\\"text-align: center\\\"> \\r\\n      \\r\\n      <section >\\r\\n        <br>\\r\\n        <ion-button expand=\\\"block\\\" (click)=\\\"edit()\\\">{{buttonText}}</ion-button>\\r\\n      </section>\\r\\n\\r\\n      <section>\\r\\n        <ion-button expand=\\\"block\\\" (click)=\\\"updatePassword()\\\">Update Password</ion-button>\\r\\n      </section>\\r\\n\\r\\n      <section >\\r\\n        <br>\\r\\n        <ion-text color=\\\"danger\\\"  (click)=\\\"deleteAccount()\\\">\\r\\n          <u>Delete Account?</u>\\r\\n        </ion-text>\\r\\n      </section>\\r\\n    </div>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AccountPage } from './account.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AccountPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AccountPageRoutingModule } from './account-routing.module';\r\n\r\nimport { AccountPage } from './account.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AccountPageRoutingModule\r\n  ],\r\n  declarations: [AccountPage]\r\n})\r\nexport class AccountPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY291bnQvYWNjb3VudC5wYWdlLnNjc3MifQ== */\";","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport * as firebase from 'firebase/app';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.page.html',\r\n  styleUrls: ['./account.page.scss'],\r\n})\r\nexport class AccountPage implements OnInit {\r\n\r\n  userUID;\r\n  firstName;\r\n  lastName;\r\n  email;\r\n  buttonText: string = \"Edit\";\r\n  isRead: boolean = true;\r\n\r\n  constructor(public nacCtrl: NavController, private activatedRoute: ActivatedRoute, private firestore: AngularFirestore, private changeDetection: ChangeDetectorRef, public afAuth: AngularFireAuth, public alertController: AlertController) { }\r\n\r\n  async ngOnInit() {\r\n    try{\r\n    var self = this;\r\n    await (this.afAuth.onAuthStateChanged(async function(user) {             \r\n      if (user) {        \r\n        self.userUID = user.uid\r\n          var userRef = (await self.firestore.collection(\"users\").doc(self.userUID).get().toPromise()).data()          \r\n              self.firstName = userRef.firstname;\r\n              self.lastName = userRef.lastname; \r\n              self.email = userRef.email; \r\n              self.changeDetection.detectChanges();                 \r\n      }\r\n      else{\r\n        console.log('no user signed in');\r\n      }\r\n    }));    \r\n      \r\n  }\r\n  catch(error){\r\n    console.log(error.message)\r\n  }\r\n  this.changeDetection.detectChanges();\r\n}\r\n\r\nedit()\r\n  {\r\n    if(this.buttonText == \"Edit\"){\r\n      this.isRead = false;\r\n      this.buttonText = \"Save\";\r\n     }\r\n    else{\r\n      \r\n      \r\n      const { firstName, lastName } = this\r\n      if(firstName.trim().length != 0 && lastName.trim().length != 0){\r\n        try{\r\n          this.firestore.doc(`users/${this.userUID}`).update({          \r\n            firstname: this.firstName,\r\n            lastname: this.lastName              \r\n          })\r\n          this.isRead = true;\r\n          this.buttonText = \"Edit\";\r\n        }catch(error){  \r\n          console.log(error.message)\r\n        }   \r\n      }else {\r\n       this.presentAlert(\"Please enter a value for name\");   \r\n           \r\n      }  \r\n      \r\n    }   \r\n  }\r\n  \r\n  public async presentAlert(errorMessage) : Promise<boolean> {\r\n    let resolveFunction: (confirm: boolean) => void;\r\n    const promise = new Promise<boolean>(resolve => {\r\n      resolveFunction = resolve;\r\n    });\r\n    \r\n    const alert = await this.alertController.create({\r\n      header: 'Error',\r\n      message: errorMessage,\r\n      buttons: [\r\n        {\r\n          text: 'OK',\r\n            handler: () => resolveFunction(true)\r\n        }\r\n      ]\r\n    });\r\n    \r\n  await alert.present();\r\n  return promise;\r\n}\r\n\r\n  updatePassword(){        \r\n    this.nacCtrl.navigateRoot(['./update-password'])\r\n  }\r\n\r\n  async deleteAccount(){\r\n    //let self = this;\r\n    const confirm = await this.presentAlertDelete();\r\n    var userRef = (await this.firestore.collection(\"users\").doc(this.userUID).get().toPromise()).data() \r\n    if (confirm) {  \r\n     try{\r\n\r\n      (await this.afAuth.currentUser).delete();\r\n\r\n      this.firestore.collection('archive').doc(this.userUID).set({\r\n            deleteTime: new Date(),\r\n            email: userRef.email,\r\n            firstname: userRef.firstname,\r\n            lastname: userRef.lastname,\r\n            isRetailer: userRef.isRetailer,\r\n            orders: userRef.orders,\r\n            type: \"User Account\"\r\n       });\r\n\r\n       this.firestore.doc(`users/${this.userUID}`).delete();\r\n       this.nacCtrl.navigateRoot(['./login']);\r\n       console.log(\"user deleted\");\r\n     }\r\n     catch(error){\r\n       console.log(error)\r\n     }\r\n\r\n      // firebase.auth().currentUser.delete().then(function() {\r\n      //   // User deleted.       \r\n      //   console.log(\"entered then\")  \r\n      //   console.log(self.userUID);\r\n      //   console.log(userRef);\r\n      //   self.firestore.collection('archive').doc(self.userUID).set({\r\n      //     email: userRef.email,\r\n      //     firstname: userRef.firstname,\r\n      //     lastname: userRef.lastname,\r\n      //     isRetailer: userRef.isRetailer,\r\n      //     orders: userRef.orders,\r\n      //     type: \"User Account\"\r\n      //   })\r\n      //   .then(function() {\r\n      //       console.log(\"Document successfully written to Archive!\");\r\n      //   })\r\n      //   .catch(function(error) {\r\n      //       console.error(\"Error writing document: \", error);\r\n      //   });        \r\n      //   self.firestore.doc(`users/${self.userUID}`).delete();\r\n      //   self.nacCtrl.navigateRoot(['./login'])\r\n      //   console.log(\"user deleted\")\r\n      // }).catch(function(error) {\r\n      //   console.log(error)\r\n      //   console.log(\"Error deleting user\")\r\n      // });\r\n    }\r\n  }\r\n\r\n  async presentAlertDelete() : Promise<boolean> {\r\n    let resolveFunction: (confirm: boolean) => void;\r\n    const promise = new Promise<boolean>(resolve => {\r\n      resolveFunction = resolve;\r\n    });\r\n    const alert = await this.alertController.create({\r\n      header: 'Confirm Delete',\r\n      message: 'Are you sure you want to delete this account? This is a permanent deletion and cannot be undone. Please enter your password to continue',\r\n      inputs: [        \r\n        {\r\n          name: 'password',\r\n          placeholder: 'Password',\r\n          type: 'password'\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          handler: () => resolveFunction(false)\r\n        },\r\n        {\r\n          text: 'Yes',\r\n          handler: data => {\r\n            this.afAuth.signInWithEmailAndPassword(firebase.auth().currentUser.email, data.password).then(function(){\r\n              console.log(\"signed in\")\r\n              resolveFunction(true)\r\n            }).catch(function(error){\r\n              console.log(error.message)\r\n            })           \r\n                      \r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n    return promise;\r\n  }\r\n}\r\n"]}